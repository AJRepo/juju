// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/secrets/provider (interfaces: SecretsStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	secrets "github.com/juju/juju/core/secrets"
)

// MockSecretsStore is a mock of SecretsStore interface.
type MockSecretsStore struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsStoreMockRecorder
}

// MockSecretsStoreMockRecorder is the mock recorder for MockSecretsStore.
type MockSecretsStoreMockRecorder struct {
	mock *MockSecretsStore
}

// NewMockSecretsStore creates a new mock instance.
func NewMockSecretsStore(ctrl *gomock.Controller) *MockSecretsStore {
	mock := &MockSecretsStore{ctrl: ctrl}
	mock.recorder = &MockSecretsStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsStore) EXPECT() *MockSecretsStoreMockRecorder {
	return m.recorder
}

// DeleteContent mocks base method.
func (m *MockSecretsStore) DeleteContent(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteContent", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteContent indicates an expected call of DeleteContent.
func (mr *MockSecretsStoreMockRecorder) DeleteContent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteContent", reflect.TypeOf((*MockSecretsStore)(nil).DeleteContent), arg0, arg1)
}

// GetContent mocks base method.
func (m *MockSecretsStore) GetContent(arg0 context.Context, arg1 string) (secrets.SecretValue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContent", arg0, arg1)
	ret0, _ := ret[0].(secrets.SecretValue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContent indicates an expected call of GetContent.
func (mr *MockSecretsStoreMockRecorder) GetContent(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContent", reflect.TypeOf((*MockSecretsStore)(nil).GetContent), arg0, arg1)
}

// SaveContent mocks base method.
func (m *MockSecretsStore) SaveContent(arg0 context.Context, arg1 *secrets.URI, arg2 int, arg3 secrets.SecretValue) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveContent", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveContent indicates an expected call of SaveContent.
func (mr *MockSecretsStoreMockRecorder) SaveContent(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveContent", reflect.TypeOf((*MockSecretsStore)(nil).SaveContent), arg0, arg1, arg2, arg3)
}
