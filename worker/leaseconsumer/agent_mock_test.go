// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/agent (interfaces: Agent)

// Package leaseconsumer is a generated GoMock package.
package leaseconsumer

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	agent "github.com/juju/juju/agent"
)

// MockAgent is a mock of Agent interface.
type MockAgent struct {
	ctrl     *gomock.Controller
	recorder *MockAgentMockRecorder
}

// MockAgentMockRecorder is the mock recorder for MockAgent.
type MockAgentMockRecorder struct {
	mock *MockAgent
}

// NewMockAgent creates a new mock instance.
func NewMockAgent(ctrl *gomock.Controller) *MockAgent {
	mock := &MockAgent{ctrl: ctrl}
	mock.recorder = &MockAgentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAgent) EXPECT() *MockAgentMockRecorder {
	return m.recorder
}

// ChangeConfig mocks base method.
func (m *MockAgent) ChangeConfig(arg0 agent.ConfigMutator) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeConfig", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeConfig indicates an expected call of ChangeConfig.
func (mr *MockAgentMockRecorder) ChangeConfig(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeConfig", reflect.TypeOf((*MockAgent)(nil).ChangeConfig), arg0)
}

// CurrentConfig mocks base method.
func (m *MockAgent) CurrentConfig() agent.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentConfig")
	ret0, _ := ret[0].(agent.Config)
	return ret0
}

// CurrentConfig indicates an expected call of CurrentConfig.
func (mr *MockAgentMockRecorder) CurrentConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentConfig", reflect.TypeOf((*MockAgent)(nil).CurrentConfig))
}
