// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/juju/juju/worker/caasapplicationprovisioner (interfaces: CAASUnitProvisionerFacade)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	watcher "github.com/juju/juju/core/watcher"
	reflect "reflect"
)

// MockCAASUnitProvisionerFacade is a mock of CAASUnitProvisionerFacade interface
type MockCAASUnitProvisionerFacade struct {
	ctrl     *gomock.Controller
	recorder *MockCAASUnitProvisionerFacadeMockRecorder
}

// MockCAASUnitProvisionerFacadeMockRecorder is the mock recorder for MockCAASUnitProvisionerFacade
type MockCAASUnitProvisionerFacadeMockRecorder struct {
	mock *MockCAASUnitProvisionerFacade
}

// NewMockCAASUnitProvisionerFacade creates a new mock instance
func NewMockCAASUnitProvisionerFacade(ctrl *gomock.Controller) *MockCAASUnitProvisionerFacade {
	mock := &MockCAASUnitProvisionerFacade{ctrl: ctrl}
	mock.recorder = &MockCAASUnitProvisionerFacadeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCAASUnitProvisionerFacade) EXPECT() *MockCAASUnitProvisionerFacadeMockRecorder {
	return m.recorder
}

// ApplicationScale mocks base method
func (m *MockCAASUnitProvisionerFacade) ApplicationScale(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplicationScale", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ApplicationScale indicates an expected call of ApplicationScale
func (mr *MockCAASUnitProvisionerFacadeMockRecorder) ApplicationScale(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplicationScale", reflect.TypeOf((*MockCAASUnitProvisionerFacade)(nil).ApplicationScale), arg0)
}

// WatchApplicationScale mocks base method
func (m *MockCAASUnitProvisionerFacade) WatchApplicationScale(arg0 string) (watcher.NotifyWatcher, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WatchApplicationScale", arg0)
	ret0, _ := ret[0].(watcher.NotifyWatcher)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WatchApplicationScale indicates an expected call of WatchApplicationScale
func (mr *MockCAASUnitProvisionerFacadeMockRecorder) WatchApplicationScale(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WatchApplicationScale", reflect.TypeOf((*MockCAASUnitProvisionerFacade)(nil).WatchApplicationScale), arg0)
}
